#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cars
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Cars")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCar(Car instance);
    partial void UpdateCar(Car instance);
    partial void DeleteCar(Car instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertDealerShip(DealerShip instance);
    partial void UpdateDealerShip(DealerShip instance);
    partial void DeleteDealerShip(DealerShip instance);
    partial void InsertDealerShipSite(DealerShipSite instance);
    partial void UpdateDealerShipSite(DealerShipSite instance);
    partial void DeleteDealerShipSite(DealerShipSite instance);
    partial void InsertLine(Line instance);
    partial void UpdateLine(Line instance);
    partial void DeleteLine(Line instance);
    partial void InsertManufacturer(Manufacturer instance);
    partial void UpdateManufacturer(Manufacturer instance);
    partial void DeleteManufacturer(Manufacturer instance);
    partial void InsertMeeting(Meeting instance);
    partial void UpdateMeeting(Meeting instance);
    partial void DeleteMeeting(Meeting instance);
    partial void InsertMeetingsAboutCar(MeetingsAboutCar instance);
    partial void UpdateMeetingsAboutCar(MeetingsAboutCar instance);
    partial void DeleteMeetingsAboutCar(MeetingsAboutCar instance);
    partial void InsertSearchLog(SearchLog instance);
    partial void UpdateSearchLog(SearchLog instance);
    partial void DeleteSearchLog(SearchLog instance);
    #endregion
		
		public DBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CarsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Car> Cars
		{
			get
			{
				return this.GetTable<Car>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<DealerShip> DealerShips
		{
			get
			{
				return this.GetTable<DealerShip>();
			}
		}
		
		public System.Data.Linq.Table<DealerShipSite> DealerShipSites
		{
			get
			{
				return this.GetTable<DealerShipSite>();
			}
		}
		
		public System.Data.Linq.Table<Line> Lines
		{
			get
			{
				return this.GetTable<Line>();
			}
		}
		
		public System.Data.Linq.Table<Manufacturer> Manufacturers
		{
			get
			{
				return this.GetTable<Manufacturer>();
			}
		}
		
		public System.Data.Linq.Table<Meeting> Meetings
		{
			get
			{
				return this.GetTable<Meeting>();
			}
		}
		
		public System.Data.Linq.Table<MeetingsAboutCar> MeetingsAboutCars
		{
			get
			{
				return this.GetTable<MeetingsAboutCar>();
			}
		}
		
		public System.Data.Linq.Table<SearchLog> SearchLogs
		{
			get
			{
				return this.GetTable<SearchLog>();
			}
		}
		
		public System.Data.Linq.Table<vmMeetingsReport> vmMeetingsReports
		{
			get
			{
				return this.GetTable<vmMeetingsReport>();
			}
		}
		
		public System.Data.Linq.Table<vwCountManufacturer> vwCountManufacturers
		{
			get
			{
				return this.GetTable<vwCountManufacturer>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CarsUpdate")]
		public int CarsUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SerialNumber", DbType="VarChar(7)")] string serialNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldSerialNumber", DbType="VarChar(7)")] string oldSerialNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Manufacturer", DbType="NVarChar(50)")] string manufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Line", DbType="NVarChar(50)")] string line, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Color", DbType="NVarChar(50)")] string color, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Class", DbType="NVarChar(50)")] string @class, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fuel", DbType="NVarChar(50)")] string fuel, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Engine", DbType="Int")] System.Nullable<int> engine, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gearbox", DbType="NVarChar(50)")] string gearbox, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NumOfKM", DbType="Int")] System.Nullable<int> numOfKM, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Int")] System.Nullable<int> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Dealership", DbType="NVarChar(50)")] string dealership, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Site", DbType="NVarChar(50)")] string site, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarPic", DbType="NVarChar(MAX)")] string carPic)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serialNumber, oldSerialNumber, manufacturer, line, year, color, @class, fuel, engine, gearbox, numOfKM, price, dealership, site, carPic);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spUpdateManufacturer")]
		public int spUpdateManufacturer([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string newName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string oldName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), newName, oldName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DealershipDelete")]
		public int DealershipDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DealerName", DbType="NVarChar(50)")] string dealerName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dealerName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DealershipSearch")]
		public ISingleResult<DealershipSearchResult> DealershipSearch([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Dname", DbType="NVarChar(50)")] string dname)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dname);
			return ((ISingleResult<DealershipSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DealerShipSitesDelete")]
		public int DealerShipSitesDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldDealerName", DbType="NVarChar(50)")] string oldDealerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldCity", DbType="NVarChar(255)")] string oldCity)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldDealerName, oldCity);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DealerShipSitesSearch")]
		public ISingleResult<DealerShipSitesSearchResult> DealerShipSitesSearch([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Dname", DbType="NVarChar(50)")] string dname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Dsite", DbType="NVarChar(255)")] string dsite)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dname, dsite);
			return ((ISingleResult<DealerShipSitesSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DealerShipSitesUpdate")]
		public int DealerShipSitesUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldDealerName", DbType="NVarChar(50)")] string oldDealerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldCity", DbType="NVarChar(255)")] string oldCity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewDealerName", DbType="NVarChar(50)")] string newDealerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewCity", DbType="NVarChar(255)")] string newCity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewAddress", DbType="NVarChar(50)")] string newAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewPhone", DbType="NVarChar(10)")] string newPhone)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldDealerName, oldCity, newDealerName, newCity, newAddress, newPhone);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteManufacturer")]
		public int deleteManufacturer([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getDealership")]
		public ISingleResult<getDealershipResult> getDealership()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<getDealershipResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getDealershipSite")]
		public ISingleResult<getDealershipSiteResult> getDealershipSite([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((ISingleResult<getDealershipSiteResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LineSearch")]
		public ISingleResult<LineSearchResult> LineSearch([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Manufacturer", DbType="NVarChar(50)")] string manufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Line", DbType="NVarChar(50)")] string line)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), manufacturer, line);
			return ((ISingleResult<LineSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spDealershipUpdate")]
		public int spDealershipUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewName", DbType="NVarChar(50)")] string newName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldName", DbType="NVarChar(50)")] string oldName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewLogo", DbType="NVarChar(MAX)")] string newLogo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldLogo", DbType="NVarChar(MAX)")] string oldLogo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), newName, oldName, newLogo, oldLogo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetLine")]
		public ISingleResult<spGetLineResult> spGetLine([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((ISingleResult<spGetLineResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetManufacturer")]
		public ISingleResult<spGetManufacturerResult> spGetManufacturer()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<spGetManufacturerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spLineDelete")]
		public int spLineDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManufacturerDelete", DbType="NVarChar(50)")] string manufacturerDelete, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string lineDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), manufacturerDelete, lineDelete);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spLineUpdate")]
		public int spLineUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewManufacturer", DbType="NVarChar(50)")] string newManufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldManufacturer", DbType="NVarChar(50)")] string oldManufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewLine", DbType="NVarChar(50)")] string newLine, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldLine", DbType="NVarChar(50)")] string oldLine)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), newManufacturer, oldManufacturer, newLine, oldLine);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSearchManufacturer")]
		public ISingleResult<spSearchManufacturerResult> spSearchManufacturer([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((ISingleResult<spSearchManufacturerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CarsDelete")]
		public int CarsDelete([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(7)")] string carNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), carNumber);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CarSearch")]
		public ISingleResult<CarSearchResult> CarSearch(
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(7)")] string serialNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string manufacturer, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string line, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Minyear", DbType="Int")] System.Nullable<int> minyear, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MaxYear", DbType="Int")] System.Nullable<int> maxYear, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="class", DbType="NVarChar(50)")] string @class, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string fuel, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MinEngine", DbType="Int")] System.Nullable<int> minEngine, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MaxEngine", DbType="Int")] System.Nullable<int> maxEngine, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string gearbox, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MinnumKM", DbType="Int")] System.Nullable<int> minnumKM, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MaxnumKM", DbType="Int")] System.Nullable<int> maxnumKM, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Minprice", DbType="Int")] System.Nullable<int> minprice, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MaxPrice", DbType="Int")] System.Nullable<int> maxPrice, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string dealership, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string citySite)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serialNumber, manufacturer, line, minyear, maxYear, @class, fuel, minEngine, maxEngine, gearbox, minnumKM, maxnumKM, minprice, maxPrice, dealership, citySite);
			return ((ISingleResult<CarSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchCarNumber")]
		public ISingleResult<SearchCarNumberResult> SearchCarNumber([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(7)")] string carnumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), carnumber);
			return ((ISingleResult<SearchCarNumberResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MeetingReport")]
		public ISingleResult<MeetingReportResult> MeetingReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="Date")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="Date")] System.Nullable<System.DateTime> toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Company", DbType="NVarChar(50)")] string company, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Site", DbType="NVarChar(50)")] string site)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, company, site);
			return ((ISingleResult<MeetingReportResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cars")]
	public partial class Car : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _serialNumber;
		
		private string _manufacturer_Name_Line;
		
		private string _LineName;
		
		private int _Year;
		
		private string _Color;
		
		private string _Class;
		
		private string _Fuel;
		
		private int _Engine;
		
		private string _Gearbox;
		
		private int _NumOfKM;
		
		private int _Price;
		
		private string _DealershipName;
		
		private string _DealershipNameSite;
		
		private string _CarPic;
		
		private EntitySet<Meeting> _Meetings;
		
		private EntitySet<MeetingsAboutCar> _MeetingsAboutCars;
		
		private EntityRef<DealerShipSite> _DealerShipSite;
		
		private EntityRef<Line> _Line;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnserialNumberChanging(string value);
    partial void OnserialNumberChanged();
    partial void Onmanufacturer_Name_LineChanging(string value);
    partial void Onmanufacturer_Name_LineChanged();
    partial void OnLineNameChanging(string value);
    partial void OnLineNameChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnFuelChanging(string value);
    partial void OnFuelChanged();
    partial void OnEngineChanging(int value);
    partial void OnEngineChanged();
    partial void OnGearboxChanging(string value);
    partial void OnGearboxChanged();
    partial void OnNumOfKMChanging(int value);
    partial void OnNumOfKMChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnDealershipNameChanging(string value);
    partial void OnDealershipNameChanged();
    partial void OnDealershipNameSiteChanging(string value);
    partial void OnDealershipNameSiteChanged();
    partial void OnCarPicChanging(string value);
    partial void OnCarPicChanged();
    #endregion
		
		public Car()
		{
			this._Meetings = new EntitySet<Meeting>(new Action<Meeting>(this.attach_Meetings), new Action<Meeting>(this.detach_Meetings));
			this._MeetingsAboutCars = new EntitySet<MeetingsAboutCar>(new Action<MeetingsAboutCar>(this.attach_MeetingsAboutCars), new Action<MeetingsAboutCar>(this.detach_MeetingsAboutCars));
			this._DealerShipSite = default(EntityRef<DealerShipSite>);
			this._Line = default(EntityRef<Line>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serialNumber", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string serialNumber
		{
			get
			{
				return this._serialNumber;
			}
			set
			{
				if ((this._serialNumber != value))
				{
					this.OnserialNumberChanging(value);
					this.SendPropertyChanging();
					this._serialNumber = value;
					this.SendPropertyChanged("serialNumber");
					this.OnserialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manufacturer_Name_Line", DbType="NVarChar(50)")]
		public string manufacturer_Name_Line
		{
			get
			{
				return this._manufacturer_Name_Line;
			}
			set
			{
				if ((this._manufacturer_Name_Line != value))
				{
					if (this._Line.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmanufacturer_Name_LineChanging(value);
					this.SendPropertyChanging();
					this._manufacturer_Name_Line = value;
					this.SendPropertyChanged("manufacturer_Name_Line");
					this.Onmanufacturer_Name_LineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineName", DbType="NVarChar(50)")]
		public string LineName
		{
			get
			{
				return this._LineName;
			}
			set
			{
				if ((this._LineName != value))
				{
					if (this._Line.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLineNameChanging(value);
					this.SendPropertyChanging();
					this._LineName = value;
					this.SendPropertyChanged("LineName");
					this.OnLineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fuel", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Fuel
		{
			get
			{
				return this._Fuel;
			}
			set
			{
				if ((this._Fuel != value))
				{
					this.OnFuelChanging(value);
					this.SendPropertyChanging();
					this._Fuel = value;
					this.SendPropertyChanged("Fuel");
					this.OnFuelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Engine", DbType="Int NOT NULL")]
		public int Engine
		{
			get
			{
				return this._Engine;
			}
			set
			{
				if ((this._Engine != value))
				{
					this.OnEngineChanging(value);
					this.SendPropertyChanging();
					this._Engine = value;
					this.SendPropertyChanged("Engine");
					this.OnEngineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gearbox", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Gearbox
		{
			get
			{
				return this._Gearbox;
			}
			set
			{
				if ((this._Gearbox != value))
				{
					this.OnGearboxChanging(value);
					this.SendPropertyChanging();
					this._Gearbox = value;
					this.SendPropertyChanged("Gearbox");
					this.OnGearboxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumOfKM", DbType="Int NOT NULL")]
		public int NumOfKM
		{
			get
			{
				return this._NumOfKM;
			}
			set
			{
				if ((this._NumOfKM != value))
				{
					this.OnNumOfKMChanging(value);
					this.SendPropertyChanging();
					this._NumOfKM = value;
					this.SendPropertyChanged("NumOfKM");
					this.OnNumOfKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealershipName", DbType="NVarChar(50)")]
		public string DealershipName
		{
			get
			{
				return this._DealershipName;
			}
			set
			{
				if ((this._DealershipName != value))
				{
					if (this._DealerShipSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealershipNameChanging(value);
					this.SendPropertyChanging();
					this._DealershipName = value;
					this.SendPropertyChanged("DealershipName");
					this.OnDealershipNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealershipNameSite", DbType="NVarChar(255)")]
		public string DealershipNameSite
		{
			get
			{
				return this._DealershipNameSite;
			}
			set
			{
				if ((this._DealershipNameSite != value))
				{
					if (this._DealerShipSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealershipNameSiteChanging(value);
					this.SendPropertyChanging();
					this._DealershipNameSite = value;
					this.SendPropertyChanged("DealershipNameSite");
					this.OnDealershipNameSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPic", DbType="NVarChar(MAX)")]
		public string CarPic
		{
			get
			{
				return this._CarPic;
			}
			set
			{
				if ((this._CarPic != value))
				{
					this.OnCarPicChanging(value);
					this.SendPropertyChanging();
					this._CarPic = value;
					this.SendPropertyChanged("CarPic");
					this.OnCarPicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_Meeting", Storage="_Meetings", ThisKey="serialNumber", OtherKey="CarNumber")]
		public EntitySet<Meeting> Meetings
		{
			get
			{
				return this._Meetings;
			}
			set
			{
				this._Meetings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_MeetingsAboutCar", Storage="_MeetingsAboutCars", ThisKey="serialNumber", OtherKey="CarSerialNumber")]
		public EntitySet<MeetingsAboutCar> MeetingsAboutCars
		{
			get
			{
				return this._MeetingsAboutCars;
			}
			set
			{
				this._MeetingsAboutCars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerShipSite_Car", Storage="_DealerShipSite", ThisKey="DealershipName,DealershipNameSite", OtherKey="dealerShipName,CitySite", IsForeignKey=true)]
		public DealerShipSite DealerShipSite
		{
			get
			{
				return this._DealerShipSite.Entity;
			}
			set
			{
				DealerShipSite previousValue = this._DealerShipSite.Entity;
				if (((previousValue != value) 
							|| (this._DealerShipSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DealerShipSite.Entity = null;
						previousValue.Cars.Remove(this);
					}
					this._DealerShipSite.Entity = value;
					if ((value != null))
					{
						value.Cars.Add(this);
						this._DealershipName = value.dealerShipName;
						this._DealershipNameSite = value.CitySite;
					}
					else
					{
						this._DealershipName = default(string);
						this._DealershipNameSite = default(string);
					}
					this.SendPropertyChanged("DealerShipSite");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Line_Car", Storage="_Line", ThisKey="manufacturer_Name_Line,LineName", OtherKey="ManufacturerName,Line1", IsForeignKey=true)]
		public Line Line
		{
			get
			{
				return this._Line.Entity;
			}
			set
			{
				Line previousValue = this._Line.Entity;
				if (((previousValue != value) 
							|| (this._Line.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Line.Entity = null;
						previousValue.Cars.Remove(this);
					}
					this._Line.Entity = value;
					if ((value != null))
					{
						value.Cars.Add(this);
						this._manufacturer_Name_Line = value.ManufacturerName;
						this._LineName = value.Line1;
					}
					else
					{
						this._manufacturer_Name_Line = default(string);
						this._LineName = default(string);
					}
					this.SendPropertyChanged("Line");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Meetings(Meeting entity)
		{
			this.SendPropertyChanging();
			entity.Car = this;
		}
		
		private void detach_Meetings(Meeting entity)
		{
			this.SendPropertyChanging();
			entity.Car = null;
		}
		
		private void attach_MeetingsAboutCars(MeetingsAboutCar entity)
		{
			this.SendPropertyChanging();
			entity.Car = this;
		}
		
		private void detach_MeetingsAboutCars(MeetingsAboutCar entity)
		{
			this.SendPropertyChanging();
			entity.Car = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Position;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(10)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DealerShip")]
	public partial class DealerShip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _logo;
		
		private EntitySet<DealerShipSite> _DealerShipSites;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnlogoChanging(string value);
    partial void OnlogoChanged();
    #endregion
		
		public DealerShip()
		{
			this._DealerShipSites = new EntitySet<DealerShipSite>(new Action<DealerShipSite>(this.attach_DealerShipSites), new Action<DealerShipSite>(this.detach_DealerShipSites));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logo", DbType="NVarChar(MAX)")]
		public string logo
		{
			get
			{
				return this._logo;
			}
			set
			{
				if ((this._logo != value))
				{
					this.OnlogoChanging(value);
					this.SendPropertyChanging();
					this._logo = value;
					this.SendPropertyChanged("logo");
					this.OnlogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerShip_DealerShipSite", Storage="_DealerShipSites", ThisKey="Name", OtherKey="dealerShipName")]
		public EntitySet<DealerShipSite> DealerShipSites
		{
			get
			{
				return this._DealerShipSites;
			}
			set
			{
				this._DealerShipSites.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DealerShipSites(DealerShipSite entity)
		{
			this.SendPropertyChanging();
			entity.DealerShip = this;
		}
		
		private void detach_DealerShipSites(DealerShipSite entity)
		{
			this.SendPropertyChanging();
			entity.DealerShip = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DealerShipSites")]
	public partial class DealerShipSite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _dealerShipName;
		
		private string _CitySite;
		
		private string _address;
		
		private string _phone;
		
		private EntitySet<Car> _Cars;
		
		private EntitySet<Meeting> _Meetings;
		
		private EntityRef<DealerShip> _DealerShip;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndealerShipNameChanging(string value);
    partial void OndealerShipNameChanged();
    partial void OnCitySiteChanging(string value);
    partial void OnCitySiteChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    #endregion
		
		public DealerShipSite()
		{
			this._Cars = new EntitySet<Car>(new Action<Car>(this.attach_Cars), new Action<Car>(this.detach_Cars));
			this._Meetings = new EntitySet<Meeting>(new Action<Meeting>(this.attach_Meetings), new Action<Meeting>(this.detach_Meetings));
			this._DealerShip = default(EntityRef<DealerShip>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dealerShipName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string dealerShipName
		{
			get
			{
				return this._dealerShipName;
			}
			set
			{
				if ((this._dealerShipName != value))
				{
					if (this._DealerShip.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndealerShipNameChanging(value);
					this.SendPropertyChanging();
					this._dealerShipName = value;
					this.SendPropertyChanged("dealerShipName");
					this.OndealerShipNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CitySite", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CitySite
		{
			get
			{
				return this._CitySite;
			}
			set
			{
				if ((this._CitySite != value))
				{
					this.OnCitySiteChanging(value);
					this.SendPropertyChanging();
					this._CitySite = value;
					this.SendPropertyChanged("CitySite");
					this.OnCitySiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerShipSite_Car", Storage="_Cars", ThisKey="dealerShipName,CitySite", OtherKey="DealershipName,DealershipNameSite")]
		public EntitySet<Car> Cars
		{
			get
			{
				return this._Cars;
			}
			set
			{
				this._Cars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerShipSite_Meeting", Storage="_Meetings", ThisKey="dealerShipName,CitySite", OtherKey="DealershipName,DealrshipSite")]
		public EntitySet<Meeting> Meetings
		{
			get
			{
				return this._Meetings;
			}
			set
			{
				this._Meetings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerShip_DealerShipSite", Storage="_DealerShip", ThisKey="dealerShipName", OtherKey="Name", IsForeignKey=true)]
		public DealerShip DealerShip
		{
			get
			{
				return this._DealerShip.Entity;
			}
			set
			{
				DealerShip previousValue = this._DealerShip.Entity;
				if (((previousValue != value) 
							|| (this._DealerShip.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DealerShip.Entity = null;
						previousValue.DealerShipSites.Remove(this);
					}
					this._DealerShip.Entity = value;
					if ((value != null))
					{
						value.DealerShipSites.Add(this);
						this._dealerShipName = value.Name;
					}
					else
					{
						this._dealerShipName = default(string);
					}
					this.SendPropertyChanged("DealerShip");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cars(Car entity)
		{
			this.SendPropertyChanging();
			entity.DealerShipSite = this;
		}
		
		private void detach_Cars(Car entity)
		{
			this.SendPropertyChanging();
			entity.DealerShipSite = null;
		}
		
		private void attach_Meetings(Meeting entity)
		{
			this.SendPropertyChanging();
			entity.DealerShipSite = this;
		}
		
		private void detach_Meetings(Meeting entity)
		{
			this.SendPropertyChanging();
			entity.DealerShipSite = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Line")]
	public partial class Line : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ManufacturerName;
		
		private string _Line1;
		
		private EntitySet<Car> _Cars;
		
		private EntityRef<Manufacturer> _Manufacturer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManufacturerNameChanging(string value);
    partial void OnManufacturerNameChanged();
    partial void OnLine1Changing(string value);
    partial void OnLine1Changed();
    #endregion
		
		public Line()
		{
			this._Cars = new EntitySet<Car>(new Action<Car>(this.attach_Cars), new Action<Car>(this.detach_Cars));
			this._Manufacturer = default(EntityRef<Manufacturer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ManufacturerName
		{
			get
			{
				return this._ManufacturerName;
			}
			set
			{
				if ((this._ManufacturerName != value))
				{
					if (this._Manufacturer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManufacturerNameChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerName = value;
					this.SendPropertyChanged("ManufacturerName");
					this.OnManufacturerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Line", Storage="_Line1", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Line1
		{
			get
			{
				return this._Line1;
			}
			set
			{
				if ((this._Line1 != value))
				{
					this.OnLine1Changing(value);
					this.SendPropertyChanging();
					this._Line1 = value;
					this.SendPropertyChanged("Line1");
					this.OnLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Line_Car", Storage="_Cars", ThisKey="ManufacturerName,Line1", OtherKey="manufacturer_Name_Line,LineName")]
		public EntitySet<Car> Cars
		{
			get
			{
				return this._Cars;
			}
			set
			{
				this._Cars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Line", Storage="_Manufacturer", ThisKey="ManufacturerName", OtherKey="Name", IsForeignKey=true)]
		public Manufacturer Manufacturer
		{
			get
			{
				return this._Manufacturer.Entity;
			}
			set
			{
				Manufacturer previousValue = this._Manufacturer.Entity;
				if (((previousValue != value) 
							|| (this._Manufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Manufacturer.Entity = null;
						previousValue.Lines.Remove(this);
					}
					this._Manufacturer.Entity = value;
					if ((value != null))
					{
						value.Lines.Add(this);
						this._ManufacturerName = value.Name;
					}
					else
					{
						this._ManufacturerName = default(string);
					}
					this.SendPropertyChanged("Manufacturer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cars(Car entity)
		{
			this.SendPropertyChanging();
			entity.Line = this;
		}
		
		private void detach_Cars(Car entity)
		{
			this.SendPropertyChanging();
			entity.Line = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Manufacturer")]
	public partial class Manufacturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private EntitySet<Line> _Lines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Manufacturer()
		{
			this._Lines = new EntitySet<Line>(new Action<Line>(this.attach_Lines), new Action<Line>(this.detach_Lines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Line", Storage="_Lines", ThisKey="Name", OtherKey="ManufacturerName")]
		public EntitySet<Line> Lines
		{
			get
			{
				return this._Lines;
			}
			set
			{
				this._Lines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lines(Line entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = this;
		}
		
		private void detach_Lines(Line entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Meetings")]
	public partial class Meeting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CustomerFirstName;
		
		private string _customerLastName;
		
		private string _customerPhone;
		
		private System.DateTime _DateOfMeeting;
		
		private System.Nullable<System.TimeSpan> _TimeOfMeeting;
		
		private string _DealershipName;
		
		private string _DealrshipSite;
		
		private string _CarNumber;
		
		private EntitySet<MeetingsAboutCar> _MeetingsAboutCars;
		
		private EntityRef<DealerShipSite> _DealerShipSite;
		
		private EntityRef<Car> _Car;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerFirstNameChanging(string value);
    partial void OnCustomerFirstNameChanged();
    partial void OncustomerLastNameChanging(string value);
    partial void OncustomerLastNameChanged();
    partial void OncustomerPhoneChanging(string value);
    partial void OncustomerPhoneChanged();
    partial void OnDateOfMeetingChanging(System.DateTime value);
    partial void OnDateOfMeetingChanged();
    partial void OnTimeOfMeetingChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeOfMeetingChanged();
    partial void OnDealershipNameChanging(string value);
    partial void OnDealershipNameChanged();
    partial void OnDealrshipSiteChanging(string value);
    partial void OnDealrshipSiteChanged();
    partial void OnCarNumberChanging(string value);
    partial void OnCarNumberChanged();
    #endregion
		
		public Meeting()
		{
			this._MeetingsAboutCars = new EntitySet<MeetingsAboutCar>(new Action<MeetingsAboutCar>(this.attach_MeetingsAboutCars), new Action<MeetingsAboutCar>(this.detach_MeetingsAboutCars));
			this._DealerShipSite = default(EntityRef<DealerShipSite>);
			this._Car = default(EntityRef<Car>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerFirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerFirstName
		{
			get
			{
				return this._CustomerFirstName;
			}
			set
			{
				if ((this._CustomerFirstName != value))
				{
					this.OnCustomerFirstNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerFirstName = value;
					this.SendPropertyChanged("CustomerFirstName");
					this.OnCustomerFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerLastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string customerLastName
		{
			get
			{
				return this._customerLastName;
			}
			set
			{
				if ((this._customerLastName != value))
				{
					this.OncustomerLastNameChanging(value);
					this.SendPropertyChanging();
					this._customerLastName = value;
					this.SendPropertyChanged("customerLastName");
					this.OncustomerLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerPhone", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string customerPhone
		{
			get
			{
				return this._customerPhone;
			}
			set
			{
				if ((this._customerPhone != value))
				{
					this.OncustomerPhoneChanging(value);
					this.SendPropertyChanging();
					this._customerPhone = value;
					this.SendPropertyChanged("customerPhone");
					this.OncustomerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfMeeting", DbType="Date NOT NULL")]
		public System.DateTime DateOfMeeting
		{
			get
			{
				return this._DateOfMeeting;
			}
			set
			{
				if ((this._DateOfMeeting != value))
				{
					this.OnDateOfMeetingChanging(value);
					this.SendPropertyChanging();
					this._DateOfMeeting = value;
					this.SendPropertyChanged("DateOfMeeting");
					this.OnDateOfMeetingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfMeeting", DbType="Time")]
		public System.Nullable<System.TimeSpan> TimeOfMeeting
		{
			get
			{
				return this._TimeOfMeeting;
			}
			set
			{
				if ((this._TimeOfMeeting != value))
				{
					this.OnTimeOfMeetingChanging(value);
					this.SendPropertyChanging();
					this._TimeOfMeeting = value;
					this.SendPropertyChanged("TimeOfMeeting");
					this.OnTimeOfMeetingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealershipName", DbType="NVarChar(50)")]
		public string DealershipName
		{
			get
			{
				return this._DealershipName;
			}
			set
			{
				if ((this._DealershipName != value))
				{
					if (this._DealerShipSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealershipNameChanging(value);
					this.SendPropertyChanging();
					this._DealershipName = value;
					this.SendPropertyChanged("DealershipName");
					this.OnDealershipNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealrshipSite", DbType="NVarChar(255)")]
		public string DealrshipSite
		{
			get
			{
				return this._DealrshipSite;
			}
			set
			{
				if ((this._DealrshipSite != value))
				{
					if (this._DealerShipSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealrshipSiteChanging(value);
					this.SendPropertyChanging();
					this._DealrshipSite = value;
					this.SendPropertyChanged("DealrshipSite");
					this.OnDealrshipSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarNumber", DbType="VarChar(7)")]
		public string CarNumber
		{
			get
			{
				return this._CarNumber;
			}
			set
			{
				if ((this._CarNumber != value))
				{
					if (this._Car.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarNumberChanging(value);
					this.SendPropertyChanging();
					this._CarNumber = value;
					this.SendPropertyChanged("CarNumber");
					this.OnCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_MeetingsAboutCar", Storage="_MeetingsAboutCars", ThisKey="ID", OtherKey="MeetingID")]
		public EntitySet<MeetingsAboutCar> MeetingsAboutCars
		{
			get
			{
				return this._MeetingsAboutCars;
			}
			set
			{
				this._MeetingsAboutCars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DealerShipSite_Meeting", Storage="_DealerShipSite", ThisKey="DealershipName,DealrshipSite", OtherKey="dealerShipName,CitySite", IsForeignKey=true)]
		public DealerShipSite DealerShipSite
		{
			get
			{
				return this._DealerShipSite.Entity;
			}
			set
			{
				DealerShipSite previousValue = this._DealerShipSite.Entity;
				if (((previousValue != value) 
							|| (this._DealerShipSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DealerShipSite.Entity = null;
						previousValue.Meetings.Remove(this);
					}
					this._DealerShipSite.Entity = value;
					if ((value != null))
					{
						value.Meetings.Add(this);
						this._DealershipName = value.dealerShipName;
						this._DealrshipSite = value.CitySite;
					}
					else
					{
						this._DealershipName = default(string);
						this._DealrshipSite = default(string);
					}
					this.SendPropertyChanged("DealerShipSite");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_Meeting", Storage="_Car", ThisKey="CarNumber", OtherKey="serialNumber", IsForeignKey=true)]
		public Car Car
		{
			get
			{
				return this._Car.Entity;
			}
			set
			{
				Car previousValue = this._Car.Entity;
				if (((previousValue != value) 
							|| (this._Car.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Car.Entity = null;
						previousValue.Meetings.Remove(this);
					}
					this._Car.Entity = value;
					if ((value != null))
					{
						value.Meetings.Add(this);
						this._CarNumber = value.serialNumber;
					}
					else
					{
						this._CarNumber = default(string);
					}
					this.SendPropertyChanged("Car");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MeetingsAboutCars(MeetingsAboutCar entity)
		{
			this.SendPropertyChanging();
			entity.Meeting = this;
		}
		
		private void detach_MeetingsAboutCars(MeetingsAboutCar entity)
		{
			this.SendPropertyChanging();
			entity.Meeting = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeetingsAboutCars")]
	public partial class MeetingsAboutCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeetingID;
		
		private string _CarSerialNumber;
		
		private EntityRef<Car> _Car;
		
		private EntityRef<Meeting> _Meeting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingIDChanging(int value);
    partial void OnMeetingIDChanged();
    partial void OnCarSerialNumberChanging(string value);
    partial void OnCarSerialNumberChanged();
    #endregion
		
		public MeetingsAboutCar()
		{
			this._Car = default(EntityRef<Car>);
			this._Meeting = default(EntityRef<Meeting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MeetingID
		{
			get
			{
				return this._MeetingID;
			}
			set
			{
				if ((this._MeetingID != value))
				{
					if (this._Meeting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingIDChanging(value);
					this.SendPropertyChanging();
					this._MeetingID = value;
					this.SendPropertyChanged("MeetingID");
					this.OnMeetingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarSerialNumber", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CarSerialNumber
		{
			get
			{
				return this._CarSerialNumber;
			}
			set
			{
				if ((this._CarSerialNumber != value))
				{
					if (this._Car.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._CarSerialNumber = value;
					this.SendPropertyChanged("CarSerialNumber");
					this.OnCarSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_MeetingsAboutCar", Storage="_Car", ThisKey="CarSerialNumber", OtherKey="serialNumber", IsForeignKey=true)]
		public Car Car
		{
			get
			{
				return this._Car.Entity;
			}
			set
			{
				Car previousValue = this._Car.Entity;
				if (((previousValue != value) 
							|| (this._Car.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Car.Entity = null;
						previousValue.MeetingsAboutCars.Remove(this);
					}
					this._Car.Entity = value;
					if ((value != null))
					{
						value.MeetingsAboutCars.Add(this);
						this._CarSerialNumber = value.serialNumber;
					}
					else
					{
						this._CarSerialNumber = default(string);
					}
					this.SendPropertyChanged("Car");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_MeetingsAboutCar", Storage="_Meeting", ThisKey="MeetingID", OtherKey="ID", IsForeignKey=true)]
		public Meeting Meeting
		{
			get
			{
				return this._Meeting.Entity;
			}
			set
			{
				Meeting previousValue = this._Meeting.Entity;
				if (((previousValue != value) 
							|| (this._Meeting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meeting.Entity = null;
						previousValue.MeetingsAboutCars.Remove(this);
					}
					this._Meeting.Entity = value;
					if ((value != null))
					{
						value.MeetingsAboutCars.Add(this);
						this._MeetingID = value.ID;
					}
					else
					{
						this._MeetingID = default(int);
					}
					this.SendPropertyChanged("Meeting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchLog")]
	public partial class SearchLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ipAddress;
		
		private string _Manufacturer;
		
		private string _Line;
		
		private string _Color;
		
		private System.Nullable<int> _FromYear;
		
		private System.Nullable<int> _ToYear;
		
		private System.Nullable<int> _fromPrice;
		
		private System.Nullable<int> _ToPrice;
		
		private System.Nullable<int> _MinKM;
		
		private System.Nullable<int> _MaxKM;
		
		private string _Fuel;
		
		private string _engine;
		
		private string _gearbox;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnipAddressChanging(string value);
    partial void OnipAddressChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnFromYearChanging(System.Nullable<int> value);
    partial void OnFromYearChanged();
    partial void OnToYearChanging(System.Nullable<int> value);
    partial void OnToYearChanged();
    partial void OnfromPriceChanging(System.Nullable<int> value);
    partial void OnfromPriceChanged();
    partial void OnToPriceChanging(System.Nullable<int> value);
    partial void OnToPriceChanged();
    partial void OnMinKMChanging(System.Nullable<int> value);
    partial void OnMinKMChanged();
    partial void OnMaxKMChanging(System.Nullable<int> value);
    partial void OnMaxKMChanged();
    partial void OnFuelChanging(string value);
    partial void OnFuelChanged();
    partial void OnengineChanging(string value);
    partial void OnengineChanged();
    partial void OngearboxChanging(string value);
    partial void OngearboxChanged();
    #endregion
		
		public SearchLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ipAddress
		{
			get
			{
				return this._ipAddress;
			}
			set
			{
				if ((this._ipAddress != value))
				{
					this.OnipAddressChanging(value);
					this.SendPropertyChanging();
					this._ipAddress = value;
					this.SendPropertyChanged("ipAddress");
					this.OnipAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(50)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Line", DbType="NVarChar(50)")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromYear", DbType="Int")]
		public System.Nullable<int> FromYear
		{
			get
			{
				return this._FromYear;
			}
			set
			{
				if ((this._FromYear != value))
				{
					this.OnFromYearChanging(value);
					this.SendPropertyChanging();
					this._FromYear = value;
					this.SendPropertyChanged("FromYear");
					this.OnFromYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToYear", DbType="Int")]
		public System.Nullable<int> ToYear
		{
			get
			{
				return this._ToYear;
			}
			set
			{
				if ((this._ToYear != value))
				{
					this.OnToYearChanging(value);
					this.SendPropertyChanging();
					this._ToYear = value;
					this.SendPropertyChanged("ToYear");
					this.OnToYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromPrice", DbType="Int")]
		public System.Nullable<int> fromPrice
		{
			get
			{
				return this._fromPrice;
			}
			set
			{
				if ((this._fromPrice != value))
				{
					this.OnfromPriceChanging(value);
					this.SendPropertyChanging();
					this._fromPrice = value;
					this.SendPropertyChanged("fromPrice");
					this.OnfromPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPrice", DbType="Int")]
		public System.Nullable<int> ToPrice
		{
			get
			{
				return this._ToPrice;
			}
			set
			{
				if ((this._ToPrice != value))
				{
					this.OnToPriceChanging(value);
					this.SendPropertyChanging();
					this._ToPrice = value;
					this.SendPropertyChanged("ToPrice");
					this.OnToPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinKM", DbType="Int")]
		public System.Nullable<int> MinKM
		{
			get
			{
				return this._MinKM;
			}
			set
			{
				if ((this._MinKM != value))
				{
					this.OnMinKMChanging(value);
					this.SendPropertyChanging();
					this._MinKM = value;
					this.SendPropertyChanged("MinKM");
					this.OnMinKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxKM", DbType="Int")]
		public System.Nullable<int> MaxKM
		{
			get
			{
				return this._MaxKM;
			}
			set
			{
				if ((this._MaxKM != value))
				{
					this.OnMaxKMChanging(value);
					this.SendPropertyChanging();
					this._MaxKM = value;
					this.SendPropertyChanged("MaxKM");
					this.OnMaxKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fuel", DbType="NVarChar(50)")]
		public string Fuel
		{
			get
			{
				return this._Fuel;
			}
			set
			{
				if ((this._Fuel != value))
				{
					this.OnFuelChanging(value);
					this.SendPropertyChanging();
					this._Fuel = value;
					this.SendPropertyChanged("Fuel");
					this.OnFuelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_engine", DbType="NVarChar(50)")]
		public string engine
		{
			get
			{
				return this._engine;
			}
			set
			{
				if ((this._engine != value))
				{
					this.OnengineChanging(value);
					this.SendPropertyChanging();
					this._engine = value;
					this.SendPropertyChanged("engine");
					this.OnengineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gearbox", DbType="NVarChar(50)")]
		public string gearbox
		{
			get
			{
				return this._gearbox;
			}
			set
			{
				if ((this._gearbox != value))
				{
					this.OngearboxChanging(value);
					this.SendPropertyChanging();
					this._gearbox = value;
					this.SendPropertyChanged("gearbox");
					this.OngearboxChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vmMeetingsReport")]
	public partial class vmMeetingsReport
	{
		
		private int _id;
		
		private string _CustomerFirstName;
		
		private string _customerLastName;
		
		private System.DateTime _DateOfMeeting;
		
		private System.Nullable<System.TimeSpan> _TimeOfMeeting;
		
		private string _DealershipName;
		
		private string _DealrshipSite;
		
		private string _carnumber;
		
		private string _manufacturer_Name_Line;
		
		private string _LineName;
		
		private int _Year;
		
		public vmMeetingsReport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerFirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerFirstName
		{
			get
			{
				return this._CustomerFirstName;
			}
			set
			{
				if ((this._CustomerFirstName != value))
				{
					this._CustomerFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerLastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string customerLastName
		{
			get
			{
				return this._customerLastName;
			}
			set
			{
				if ((this._customerLastName != value))
				{
					this._customerLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfMeeting", DbType="Date NOT NULL")]
		public System.DateTime DateOfMeeting
		{
			get
			{
				return this._DateOfMeeting;
			}
			set
			{
				if ((this._DateOfMeeting != value))
				{
					this._DateOfMeeting = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfMeeting", DbType="Time")]
		public System.Nullable<System.TimeSpan> TimeOfMeeting
		{
			get
			{
				return this._TimeOfMeeting;
			}
			set
			{
				if ((this._TimeOfMeeting != value))
				{
					this._TimeOfMeeting = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealershipName", DbType="NVarChar(50)")]
		public string DealershipName
		{
			get
			{
				return this._DealershipName;
			}
			set
			{
				if ((this._DealershipName != value))
				{
					this._DealershipName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealrshipSite", DbType="NVarChar(255)")]
		public string DealrshipSite
		{
			get
			{
				return this._DealrshipSite;
			}
			set
			{
				if ((this._DealrshipSite != value))
				{
					this._DealrshipSite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carnumber", DbType="VarChar(7)")]
		public string carnumber
		{
			get
			{
				return this._carnumber;
			}
			set
			{
				if ((this._carnumber != value))
				{
					this._carnumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manufacturer_Name_Line", DbType="NVarChar(50)")]
		public string manufacturer_Name_Line
		{
			get
			{
				return this._manufacturer_Name_Line;
			}
			set
			{
				if ((this._manufacturer_Name_Line != value))
				{
					this._manufacturer_Name_Line = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineName", DbType="NVarChar(50)")]
		public string LineName
		{
			get
			{
				return this._LineName;
			}
			set
			{
				if ((this._LineName != value))
				{
					this._LineName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwCountManufacturer")]
	public partial class vwCountManufacturer
	{
		
		private string _שם_יצרן;
		
		private System.Nullable<int> _כמות;
		
		public vwCountManufacturer()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[שם יצרן]", Storage="_שם_יצרן", DbType="NVarChar(50)")]
		public string שם_יצרן
		{
			get
			{
				return this._שם_יצרן;
			}
			set
			{
				if ((this._שם_יצרן != value))
				{
					this._שם_יצרן = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_כמות", DbType="Int")]
		public System.Nullable<int> כמות
		{
			get
			{
				return this._כמות;
			}
			set
			{
				if ((this._כמות != value))
				{
					this._כמות = value;
				}
			}
		}
	}
	
	public partial class DealershipSearchResult
	{
		
		private string _Name;
		
		private string _logo;
		
		public DealershipSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logo", DbType="NVarChar(MAX)")]
		public string logo
		{
			get
			{
				return this._logo;
			}
			set
			{
				if ((this._logo != value))
				{
					this._logo = value;
				}
			}
		}
	}
	
	public partial class DealerShipSitesSearchResult
	{
		
		private string _dealerShipName;
		
		private string _CitySite;
		
		private string _address;
		
		private string _phone;
		
		public DealerShipSitesSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dealerShipName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string dealerShipName
		{
			get
			{
				return this._dealerShipName;
			}
			set
			{
				if ((this._dealerShipName != value))
				{
					this._dealerShipName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CitySite", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CitySite
		{
			get
			{
				return this._CitySite;
			}
			set
			{
				if ((this._CitySite != value))
				{
					this._CitySite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this._address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this._phone = value;
				}
			}
		}
	}
	
	public partial class getDealershipResult
	{
		
		private string _name;
		
		public getDealershipResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
	
	public partial class getDealershipSiteResult
	{
		
		private string _CitySite;
		
		public getDealershipSiteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CitySite", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CitySite
		{
			get
			{
				return this._CitySite;
			}
			set
			{
				if ((this._CitySite != value))
				{
					this._CitySite = value;
				}
			}
		}
	}
	
	public partial class LineSearchResult
	{
		
		private string _ManufacturerName;
		
		private string _Line;
		
		public LineSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManufacturerName
		{
			get
			{
				return this._ManufacturerName;
			}
			set
			{
				if ((this._ManufacturerName != value))
				{
					this._ManufacturerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Line", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this._Line = value;
				}
			}
		}
	}
	
	public partial class spGetLineResult
	{
		
		private string _line;
		
		public spGetLineResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_line", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string line
		{
			get
			{
				return this._line;
			}
			set
			{
				if ((this._line != value))
				{
					this._line = value;
				}
			}
		}
	}
	
	public partial class spGetManufacturerResult
	{
		
		private string _NAME;
		
		public spGetManufacturerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
	}
	
	public partial class spSearchManufacturerResult
	{
		
		private string _Name;
		
		public spSearchManufacturerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class CarSearchResult
	{
		
		private string _serialNumber;
		
		private string _manufacturer_Name_Line;
		
		private string _LineName;
		
		private int _Year;
		
		private string _Color;
		
		private string _Class;
		
		private string _Fuel;
		
		private int _Engine;
		
		private string _Gearbox;
		
		private int _NumOfKM;
		
		private int _Price;
		
		private string _DealershipName;
		
		private string _DealershipNameSite;
		
		private string _CarPic;
		
		public CarSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serialNumber", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string serialNumber
		{
			get
			{
				return this._serialNumber;
			}
			set
			{
				if ((this._serialNumber != value))
				{
					this._serialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manufacturer_Name_Line", DbType="NVarChar(50)")]
		public string manufacturer_Name_Line
		{
			get
			{
				return this._manufacturer_Name_Line;
			}
			set
			{
				if ((this._manufacturer_Name_Line != value))
				{
					this._manufacturer_Name_Line = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineName", DbType="NVarChar(50)")]
		public string LineName
		{
			get
			{
				return this._LineName;
			}
			set
			{
				if ((this._LineName != value))
				{
					this._LineName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this._Class = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fuel", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Fuel
		{
			get
			{
				return this._Fuel;
			}
			set
			{
				if ((this._Fuel != value))
				{
					this._Fuel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Engine", DbType="Int NOT NULL")]
		public int Engine
		{
			get
			{
				return this._Engine;
			}
			set
			{
				if ((this._Engine != value))
				{
					this._Engine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gearbox", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Gearbox
		{
			get
			{
				return this._Gearbox;
			}
			set
			{
				if ((this._Gearbox != value))
				{
					this._Gearbox = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumOfKM", DbType="Int NOT NULL")]
		public int NumOfKM
		{
			get
			{
				return this._NumOfKM;
			}
			set
			{
				if ((this._NumOfKM != value))
				{
					this._NumOfKM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealershipName", DbType="NVarChar(50)")]
		public string DealershipName
		{
			get
			{
				return this._DealershipName;
			}
			set
			{
				if ((this._DealershipName != value))
				{
					this._DealershipName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealershipNameSite", DbType="NVarChar(255)")]
		public string DealershipNameSite
		{
			get
			{
				return this._DealershipNameSite;
			}
			set
			{
				if ((this._DealershipNameSite != value))
				{
					this._DealershipNameSite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPic", DbType="NVarChar(MAX)")]
		public string CarPic
		{
			get
			{
				return this._CarPic;
			}
			set
			{
				if ((this._CarPic != value))
				{
					this._CarPic = value;
				}
			}
		}
	}
	
	public partial class SearchCarNumberResult
	{
		
		private string _serialNumber;
		
		private string _manufacturer_Name_Line;
		
		private string _LineName;
		
		private int _Year;
		
		private string _Color;
		
		private string _Class;
		
		private string _Fuel;
		
		private int _Engine;
		
		private string _Gearbox;
		
		private int _NumOfKM;
		
		private int _Price;
		
		private string _DealershipName;
		
		private string _DealershipNameSite;
		
		private string _CarPic;
		
		public SearchCarNumberResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serialNumber", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string serialNumber
		{
			get
			{
				return this._serialNumber;
			}
			set
			{
				if ((this._serialNumber != value))
				{
					this._serialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manufacturer_Name_Line", DbType="NVarChar(50)")]
		public string manufacturer_Name_Line
		{
			get
			{
				return this._manufacturer_Name_Line;
			}
			set
			{
				if ((this._manufacturer_Name_Line != value))
				{
					this._manufacturer_Name_Line = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineName", DbType="NVarChar(50)")]
		public string LineName
		{
			get
			{
				return this._LineName;
			}
			set
			{
				if ((this._LineName != value))
				{
					this._LineName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this._Class = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fuel", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Fuel
		{
			get
			{
				return this._Fuel;
			}
			set
			{
				if ((this._Fuel != value))
				{
					this._Fuel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Engine", DbType="Int NOT NULL")]
		public int Engine
		{
			get
			{
				return this._Engine;
			}
			set
			{
				if ((this._Engine != value))
				{
					this._Engine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gearbox", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Gearbox
		{
			get
			{
				return this._Gearbox;
			}
			set
			{
				if ((this._Gearbox != value))
				{
					this._Gearbox = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumOfKM", DbType="Int NOT NULL")]
		public int NumOfKM
		{
			get
			{
				return this._NumOfKM;
			}
			set
			{
				if ((this._NumOfKM != value))
				{
					this._NumOfKM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealershipName", DbType="NVarChar(50)")]
		public string DealershipName
		{
			get
			{
				return this._DealershipName;
			}
			set
			{
				if ((this._DealershipName != value))
				{
					this._DealershipName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealershipNameSite", DbType="NVarChar(255)")]
		public string DealershipNameSite
		{
			get
			{
				return this._DealershipNameSite;
			}
			set
			{
				if ((this._DealershipNameSite != value))
				{
					this._DealershipNameSite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPic", DbType="NVarChar(MAX)")]
		public string CarPic
		{
			get
			{
				return this._CarPic;
			}
			set
			{
				if ((this._CarPic != value))
				{
					this._CarPic = value;
				}
			}
		}
	}
	
	public partial class MeetingReportResult
	{
		
		private int _id;
		
		private string _CustomerFirstName;
		
		private string _customerLastName;
		
		private System.DateTime _DateOfMeeting;
		
		private System.Nullable<System.TimeSpan> _TimeOfMeeting;
		
		private string _DealershipName;
		
		private string _DealrshipSite;
		
		private string _carnumber;
		
		private string _manufacturer_Name_Line;
		
		private string _LineName;
		
		private int _Year;
		
		public MeetingReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerFirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerFirstName
		{
			get
			{
				return this._CustomerFirstName;
			}
			set
			{
				if ((this._CustomerFirstName != value))
				{
					this._CustomerFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerLastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string customerLastName
		{
			get
			{
				return this._customerLastName;
			}
			set
			{
				if ((this._customerLastName != value))
				{
					this._customerLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfMeeting", DbType="Date NOT NULL")]
		public System.DateTime DateOfMeeting
		{
			get
			{
				return this._DateOfMeeting;
			}
			set
			{
				if ((this._DateOfMeeting != value))
				{
					this._DateOfMeeting = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfMeeting", DbType="Time")]
		public System.Nullable<System.TimeSpan> TimeOfMeeting
		{
			get
			{
				return this._TimeOfMeeting;
			}
			set
			{
				if ((this._TimeOfMeeting != value))
				{
					this._TimeOfMeeting = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealershipName", DbType="NVarChar(50)")]
		public string DealershipName
		{
			get
			{
				return this._DealershipName;
			}
			set
			{
				if ((this._DealershipName != value))
				{
					this._DealershipName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealrshipSite", DbType="NVarChar(255)")]
		public string DealrshipSite
		{
			get
			{
				return this._DealrshipSite;
			}
			set
			{
				if ((this._DealrshipSite != value))
				{
					this._DealrshipSite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carnumber", DbType="VarChar(7)")]
		public string carnumber
		{
			get
			{
				return this._carnumber;
			}
			set
			{
				if ((this._carnumber != value))
				{
					this._carnumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manufacturer_Name_Line", DbType="NVarChar(50)")]
		public string manufacturer_Name_Line
		{
			get
			{
				return this._manufacturer_Name_Line;
			}
			set
			{
				if ((this._manufacturer_Name_Line != value))
				{
					this._manufacturer_Name_Line = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineName", DbType="NVarChar(50)")]
		public string LineName
		{
			get
			{
				return this._LineName;
			}
			set
			{
				if ((this._LineName != value))
				{
					this._LineName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
